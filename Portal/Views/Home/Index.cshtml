@model Portal.Models.HomeViewModel
@{
    ViewData["Title"] = "Solution Template Demo";
}
    <div id="pagebody">
        <div class="header" style="font-size: 200%;">
            <p style="float: left;margin: auto;align-items: stretch;">
                <strong>Azure IoT Hub : @ViewData["IoTHubName"]</strong>
            </p>
        </div>
        <div class="modal fade" id="ModalCreateDevice" role="dialog" style="">
            <div class="modal-dialog err-pop" style="width: 40vw;background-color: rgb(242, 242,242);">
                <div class="modal-content" id="NewDeviceModal">
                    <div class="header" style="text-align: center;font-size: 120%; margin: auto;align-items: stretch;display: flow-root">
                        <strong>Add Device</strong>
                    </div>
                    <div class="modal-body" style="text-align:center;">
                        @using (Html.BeginForm("AddDevice", "IoTHub", FormMethod.Post, new { @id = "NewDeviceForm" }))
                        {
                            @Html.TextBoxFor(m => Model.newDeviceId, new
                            {
                                @class = "form-control input-md",
                                @id = "newDeviceId",
                                placeholder = "Enter new device ID",
                                Required = "required"
                            })
                        }
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" id="btnAddDevice" style="width:45%;padding:3.5px;"><i class="fas fa-plus"></i>Add</button>
                        <button type="button" id="DivClose" style="width:45%;padding:3.5px;" data-dismiss="modal"><i class="fas fa-times"></i>Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="ModalSetModelId" role="dialog" style="">
            <div class="modal-dialog err-pop" style="width: 40vw;background-color: rgb(242, 242,242);">
                <div class="modal-content" id="ModelIdModal">
                    <div class="header" style="text-align: center;font-size: 120%; margin: auto;align-items: stretch;display: flow-root">
                        <strong>Set Model ID</strong>
                    </div>
                    <div class="modal-body" style="text-align:center;">
                        @using (Html.BeginForm("SetModel", "IoTHub", FormMethod.Post, new { @id = "NewModelIdForm" }))
                        {
                            @Html.TextBoxFor(m => Model.newModelId, new
                            {
                                @class = "form-control input-md",
                                    @id = "newModelId",
                                    placeholder = "Enter Model ID",
                                Required = "required"
                            })
                        }
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" id="btnSetModel" style="width:45%;padding:3.5px;"><i class="fas fa-plus"></i>Set Model ID</button>
                        <button type="button" id="DivClose" style="width:45%;padding:3.5px;" data-dismiss="modal"><i class="fas fa-times"></i>Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="ModalDeviceTwin" role="dialog" style="">
            <div class="modal-dialog err-pop" style="width:50vw;background-color: rgb(242, 242,242);">
                <div class="modal-content" id="DeviceTwinModal">
                    <div class="header" style="text-align: center; margin: auto;align-items: stretch;display: flow-root">
                        <strong>Device Twin</strong>
                    </div>
                    <div class="modal-body" style="text-align:left;">
                        <div class="accordian-body">
                            <pre><code class="nohighlight" id="DeviceTwinContent"></code></pre>
                        </div>
                        <div class="modal-footer justify-content-between">
                            <button type="button" id="DivClose" style="width:45%;padding:3.5px;" data-dismiss="modal"><i class="fas fa-times"></i>Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="main_contents">
            <fieldset>
                <legend><strong>Device Administration</strong></legend>
                <div class="container">
                    <div class="column" style="">
                        <fieldset style="height:100%;">
                            <legend class="inner">Devices</legend>
                            <div class="container">
                                <div class="row">
                                    <div class="column">
                                        <button type="button" id="btnAddDevicePopup"><i class="fas fa-plus"></i>Add Device</button>
                                        <button type="button" id="btnDeleteDevice"><i class="far fa-trash-alt"></i>Delete Device</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-left:5px">
                                        @Html.DropDownListFor(model => Model.deviceId, new SelectList(Model.deviceList, "Value", "Text"), new { @id = "DeviceList" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-left:5px">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column">
                                        &nbsp;
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="column" style="padding-left:5px;">
                        <fieldset style="height:100%;">
                            <legend class="inner">Device Information</legend>
                            <div class="container">
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;padding-left:5px">
                                        Connection State
                                    </div>
                                    <div class="column" id="tdConnectionStatus" style="width:28em;">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;padding-left:5px">
                                        Status
                                    </div>
                                    <div class="column" id="tdState">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;padding-left:5px">
                                        IoT PnP Model ID
                                    </div>
                                    <div class="column" id="tdModelId">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;padding-left:5px">
                                    </div>
                                    <div class="column" id="">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;padding-left:5px">
                                    </div>
                                    <div class="column" id="">
                                        &nbsp;
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="column" style="padding-left:5px;">
                        <fieldset style="height:100%;">
                            <legend class="inner">Device Operation</legend>
                            <div class="container">
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        <button type="button" id="btnConnectionStringCopy"><i class="fas fa-info-circle" style="width:1.5em"></i>Copy Connection String</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        <button type="button" id="btnPrimaryKeyCopy"><i class="fas fa-info-circle" style="width:1.5em"></i>Copy Primary Key</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        <button type="button" id="btnSecondaryKeyCopy"><i class="fas fa-info-circle" style="width:1.5em"></i>Copy Secondary Key</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        <button type="button" id="btnDeviceTwin"><i class="far fa-file-code" style="width:1.5em"></i>Device Twin</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        &nbsp;
                                    </div>
                                </div>

                            </div>
                        </fieldset>
                    </div>
                    <div class="column" style="padding-left:5px;">
                        <fieldset style="height:100%;">
                            <legend class="inner">Simulator</legend>
                            <div class="container">
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        <button type="button" id="btnSetModelPopup"><i class="far fa-envelope" style="width:1.5em"></i>Set Model ID</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column">
                                        <button type="button" id="btnConnect"><i class="fa fa-link" style="width: 1.5em"></i>Connect</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column">
                                        <button type="button" id="btnTelemetry"><i class="far fa-envelope" style="width:1.5em"></i>Send a message</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="column" style="padding-right:0.5em;">
                                        <a href="https://azure-samples.github.io/raspberry-pi-web-simulator/" target="_blank">Raspberry Pi Simulator</a>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <legend><strong>Device Telemetry and Events</strong></legend>
                <div class="container">
                    <div class="EventSection">
                        <button type="button" id="clear-events"><i class="far fa-trash-alt"></i>Clear Events</button>
                        <table id="grid-events" class="table table-striped">
                            <thead>
                            <th>&nbsp;</th>
                            <th>Event Time(UTC)</th>
                            <th>Device ID</th>
                            <th>Model ID</th>
                            <th>Event Source</th>
                            <th>Event Type</th>
                            </thead>
                            <tbody id="grid-event-details"></ tbody >
                        </table>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>


<script id="event-template" type="text/x-handlebars-template">
    <tr data-toggle="collapse" data-target="#event-{{eventId}}" class="accordian-toggle">
        <td>
            <button class="btn btn-primary btn-xs">
                <i class="fas fa-angle-double-down"></i>
            </button>
        </td>
        <td>{{eventTime}}</td>
        <td>{{eventDeviceId}}</td>
        <td>{{eventModelId}}</td>
        <td>{{eventSource}}</td>
        <td>{{eventType}}</td>
    </tr>
    <tr class="hiddenRow collapse" id="event-{{eventId}}">
        <td colspan="12">
            <div class="accordian-body">
                <pre><code class="nohighlight" style="font-size:110%;">{{eventData}}</code></pre>
            </div>
        </td>
    </tr>
</script>

<script>

    $(document).ready(function () {

        //
        // Button click event handlers
        //
        $("#btnSetModelPopup").click(function () {
            $('#ModalSetModelId').modal('show');
        })

        $("#btnAddDevicePopup").click(function () {
            $('#ModalCreateDevice').modal('show');
        })

        $("#btnConnectionStringCopy").click(function () {
            navigator.clipboard.writeText(connectionString);
        })

        $("#btnPrimaryKeyCopy").click(function () {
            console.log("Primary" + deviceKeyPrimary);
            navigator.clipboard.writeText(deviceKeyPrimary);
        })

        $("#btnSecondaryKeyCopy").click(function () {
            console.log("Secondary" + deviceKeySecondary);
            navigator.clipboard.writeText(deviceKeySecondary);
        })

        //
        // Retrieves Device Twin
        //
        $("#btnDeviceTwin").click(function () {
            var targetDeviceId = $("#DeviceList option:selected").text();
            console.log("Get Twin for : " + connectionString);

            if (targetDeviceId.length > 0) {
                $.ajax({
                type: "GET",
                    url: '@Url.Action("GetTwin", "IoTHub")',
                    data: { deviceId: targetDeviceId},
                    success: function (response) {
                        document.getElementById('DeviceTwinContent').innerHTML = response;
                        $('#ModalDeviceTwin').modal('show');
                    },
                    error: function(req, status, error) {
                        alert("Error " + status);
                    }
                });
            };
        })

        //
        // Gets list of devices from IoT Hub and fill the dropdown list
        //
        $('#DeviceList').change(function () {
            var targetDeviceId = $("#DeviceList option:selected").text();
            if (targetDeviceId.length > 0) {
                console.log("Selected " + targetDeviceId);
                getDeviceInfo(targetDeviceId);
            } else {
                enableDisableButtons(true);
                clearDeviceInfo();
            }
        });

        //
        // Sets Model ID to the selected device
        //
        $('#btnSetModel').click(function () {
            var targetDeviceId = $("#DeviceList option:selected").text();
            var modelId = $("#newModelId").val();

            if (connectionString.length > 0 && modelId.length > 0) {
                console.log("Setting Model ID :" + targetDeviceId + " Model : " + modelId);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SetModelId", "IoTHub")',
                    data: { connectionString: connectionString, modelId: modelId },
                    success: function(response) {
                        getDeviceInfo(targetDeviceId);
                    },
                    error: function(req, status, error) {
                        alert("Error " + status);
                    }
                });
                $('#ModalSetModelId').modal('hide');
            };
        });

        //
        // Adds a new IoT Device to IoT Hub
        //
        $('#btnAddDevice').click(function () {
            var newDevice = $('#newDeviceId').val();

            if (newDevice.length > 0) {
                console.log("Add Device " + newDevice);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AddDevice", "IoTHub")',
                    data: { deviceId: newDevice },
                    success: function(response) {
                        var newOption = "<option value='" + newDevice + "'>" + newDevice + "</option>";
                        $(newOption).insertBefore($("#DeviceList option:last"));
                        $("#DeviceList").val(newDevice);
                        getDeviceInfo(newDevice);
                    },
                    error: function(req, status, error) {
                        alert("Error " + status);
                    }
                });
                $('#ModalCreateDevice').modal('hide');
            };
        });

        //
        // Deletes an IoT device from IoT Hub
        //
        $('#btnDeleteDevice').click(function () {
            var targetDeviceId = $("#DeviceList option:selected").text();

            if (targetDeviceId.length > 0) {

                console.log("Deleting " + targetDeviceId);

                $.ajax({
                    type: "DELETE",
                    url: '@Url.Action("DeleteDevice", "IoTHub")',
                    data: { deviceId: targetDeviceId },
                    success: function (response) {
                        //alert("Success " + JSON.stringify(response));
                        $("#DeviceList option:selected").remove();
                        enableDisableButtons(true);
                        clearDeviceInfo();
                    },
                    error: function (req, status, error) {
                        alert("Error " + status);
                    }
                });
            }
        });

        //
        // Web Client Simulator
        //
        $('#btnConnect').click(function () {
            var targetDeviceId = $("#DeviceList option:selected").text();
            var modelId = $("#tdModelId").text();

            if (targetDeviceId.length > 0 && connectionString.length > 0) {
                console.log("Connect Device " + targetDeviceId + " Model : " + modelId);
                $.ajax({
                type: "POST",
                    url: '@Url.Action("ConnectDevice", "IoTHub")',
                    data: { connectionString: connectionString, modelId: modelId},
                    success: function (response) {
                        //alert(response)
                        getDeviceInfo(targetDeviceId);
                    },
                    error: function(req, status, error) {
                        alert("Error " + status);
                    }
                });
            };
        });

        $('#btnTelemetry').click(function () {
            var targetDeviceId = $("#DeviceList option:selected").text();
            var modelId = $("#tdModelId").text();

            if (targetDeviceId.length > 0) {
                console.log("Sending Telemetry from " + targetDeviceId + " Model : " + modelId);
                $.ajax({
                type: "POST",
                    url: '@Url.Action("SendTelemetry", "IoTHub")',
                    data: { connectionString: connectionString, modelId: modelId},
                    success: function (response) {
                        //alert(response)
                        getDeviceInfo(targetDeviceId);
                    },
                    error: function(req, status, error) {
                        alert("Error " + status);
                    }
                });
            };
        });
    });

</script>

@section scripts
    {
    @*<script src="~/lib/signalr.min.js" type="text/javascript"></script>*@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/2.0.0/handlebars.js"></script>

    <script type="text/javascript">

        var hubConnection;

        var connectionString = "";
        var deviceKeyPrimary = "";
        var deviceKeySecondary = "";

        var deviceTwinString = "";

        var getDeviceInfo = function (deviceId) {

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetDevice", "IoTHub")',
                data: { deviceId: deviceId },
                success: function (response) {
                    document.getElementById('tdConnectionStatus').innerHTML = response.connectionState;
                    if (response.connectionState == "Connected") {
                        btnConnect.innerHTML = '<i class="fa fa-unlink" style="width: 1.5em"></i>Disconnect'
                    } else {
                        btnConnect.innerHTML = '<i class="fa fa-link" style="width: 1.5em"></i>Connect'
                    }
                    document.getElementById('tdState').innerHTML = response.status;
                    deviceKeyPrimary = response.primaryKey;
                    deviceKeySecondary = response.secondaryKey;
                    connectionString = "HostName=" + '@ViewData["IoTHubName"]' + ";DeviceId=" + response.deviceId + ";SharedAccessKey=" + response.primaryKey;
                    document.getElementById('tdModelId').innerHTML = response.modelId;
                    deviceTwinString = response;
                    enableDisableButtons(false);
                    return true;
                },
                error: function (req, status, error) {
                    alert("Error " + status);
                    return false;
                }
            });
        }

        var clearDeviceInfo = function () {
            document.getElementById('tdConnectionStatus').innerHTML = "&nbsp;"
            btnConnect.innerHTML = '<i class="fa fa-link" style="width: 1.5em"></i>Connect'
            document.getElementById('tdState').innerHTML = "&nbsp;"
            document.getElementById('tdPrimaryKey').innerHTML = "&nbsp;"
            document.getElementById('tdSecondaryKey').innerHTML = "&nbsp;"
            document.getElementById('tdModelId').innerHTML = "&nbsp;"
            connectionString = "";
            document.getElementById('tdConnectionString').innerHTML = "&nbsp;";
            document.getElementById('tdModelId').innerHTML = "&nbsp;"
        }

        var enableDisableButtons = function (disableButton) {

            document.getElementById("btnDeleteDevice").disabled = disableButton;

            if (disableButton == false && connectionString.length > 0) {
                document.getElementById("btnConnectionStringCopy").disabled = disableButton;
                document.getElementById("btnPrimaryKeyCopy").disabled = disableButton;
                document.getElementById("btnSecondaryKeyCopy").disabled = disableButton;
                document.getElementById("btnConnect").disabled = disableButton;
                document.getElementById("btnTelemetry").disabled = disableButton;
            } else {
                document.getElementById("btnConnectionStringCopy").disabled = disableButton;
                document.getElementById("btnPrimaryKeyCopy").disabled = disableButton;
                document.getElementById("btnSecondaryKeyCopy").disabled = disableButton;
                document.getElementById("btnConnect").disabled = disableButton;
                document.getElementById("btnTelemetry").disabled = disableButton;
            }
            document.getElementById("btnSetModelPopup").disabled = disableButton;
            document.getElementById("btnDeviceTwin").disabled = disableButton;
        }

        var clearEventData = function () {
            $("#grid-events").find("tr:gt(0)").remove();
            $("#grid-events").hide();
        }

        var addEvent = function (id, type, deviceId, modelId, source, time, data) {

            var dataObj = JSON.parse(data);
            var context = {
                eventTime: time,
                eventDeviceId: deviceId,
                eventModelId: modelId,
                eventType: type,
                eventSource: source,
                eventId: id,
                eventData: JSON.stringify(dataObj, undefined, 2)
            };
            var source = document.getElementById('event-template').innerHTML;
            var template = Handlebars.compile(source);
            var html = template(context);

            $("#grid-events").show();
            $('#grid-event-details').prepend(html);
        }

        var initialize = function () {
            //$("#grid-events").hide();
            var clearEvents = document.getElementById('clear-events');
                clearEvents.addEventListener('click', function () {
                    clearEventData();
            });

            hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("telemetryhub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            hubConnection.start().catch(err => console.error(err.toString()));

            console.log("Connected to SignalR");

            hubConnection.on('DeviceTelemetry', function (payload) {
                var jsonData = JSON.parse(payload);
                addEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.data);
            });

            hubConnection.on('DeviceTwinChange', function (payload) {
                var jsonData = JSON.parse(payload)
                addEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.data);
            });

            hubConnection.on('DigitalTwinChange', function (payload) {
                var jsonData = JSON.parse(payload)
                addEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.data);
            });

            hubConnection.on('DeviceLifecycle', function (payload) {
                var jsonData = JSON.parse(payload)
                addEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.data);
                console.log("DeviceLifecycle " + jsonData.eventSource);
                if (jsonData.eventSource == 'Microsoft.Devices.DeviceCreated') {
                    Console.log("Device Added");
                    var newOption = "<option value='" + jsonData.deviceId + "'>" + jsonData.deviceId + "</option>";
                    $(newOption).insertBefore($("#DeviceList option:last"));
                    $("#DeviceList").val(jsonData.deviceId);
                }
                else if (jsonData.eventSource == 'Microsoft.Devices.DeviceDeleted')
                {
                    Console.log("Device Removed");
                }
            });

            hubConnection.on('EventGrid', function (payload) {
                var jsonData = JSON.parse(payload)
                addEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.data);
            });

            enableDisableButtons(true);
        };

        $(document).ready(function () {
            initialize();
        });
    </script>
}
